


'use strict';

var Orchestrator=require('../'),
should=require('should');
require('mocha'),

describe('orchestrator',function(){
describe('_readyToRunTask() task is ready when dependencies are resolved',function(){

it('should be ready if no dependencies',function(done){
var orchestrator,task,expected,actual;


expected=!0,
task={
name:'a',
dep:[]},



orchestrator=new Orchestrator,
orchestrator.tasks={a:task},
actual=orchestrator._readyToRunTask(task),


actual.should.equal(expected),
done();
}),

it('should be ready if dependency is done',function(done){
var orchestrator,task,dep,expected,actual;


expected=!0,
task={
name:'a',
dep:['b']},

dep={
name:'b',
dep:[],
done:!0},



orchestrator=new Orchestrator,
orchestrator.tasks={a:task,b:dep},
actual=orchestrator._readyToRunTask(task),


actual.should.equal(expected),
done();
}),

it('should not be ready if dependency is not done',function(done){
var orchestrator,task,dep,expected,actual;


expected=!1,
task={
name:'a',
dep:['b']},

dep={
name:'b',
dep:[]},




orchestrator=new Orchestrator,
orchestrator.tasks={a:task,b:dep},
actual=orchestrator._readyToRunTask(task),


actual.should.equal(expected),
done();
}),

it('should stop() if dependency is missing',function(done){
var orchestrator,task,cb,expected,actual,expectedErr;


expected=!1,
task={
name:'a',
dep:['b']},

cb=function(err){
expectedErr=err;
},


orchestrator=new Orchestrator,
orchestrator.tasks={a:task},
orchestrator.doneCallback=cb,
actual=orchestrator._readyToRunTask(task),


should.exist(expectedErr),
expectedErr.indexOf('exist').should.be.above(-1),
actual.should.equal(expected),
done();
});

});
});