


'use strict';

var Orchestrator=require('../'),
should=require('should');
require('mocha'),

describe('orchestrator',function(){
describe('_runTask() tasks execute as expected',function(){

it('calls task function',function(done){
var orchestrator,a,task;


a=0,
task={
name:'test',
fn:function(){
++a;
}},



orchestrator=new Orchestrator,
orchestrator._runTask(task),


a.should.equal(1),
done();
}),

it('sets .running correctly',function(done){
var orchestrator,task;


task={
name:'test',
fn:function(){
should.exist(task.running),
task.running.should.equal(!0);
}},



orchestrator=new Orchestrator,
orchestrator._runTask(task),


should.exist(task.running),
task.running.should.equal(!1),
done();
}),

it('logs start',function(done){
var orchestrator,task,a=0;


task={
name:'test',
fn:function(){
}},



orchestrator=new Orchestrator,
orchestrator.on('task_start',function(e){
should.exist(e.task),
e.task.should.equal('test'),
++a;
}),
orchestrator._runTask(task),


a.should.equal(1),
done();
}),

it('passes start args to stop event',function(done){
var orchestrator,task,passthrough,a=0;


task={
name:'test',
fn:function(){
}},

passthrough='passthrough',


orchestrator=new Orchestrator,
orchestrator.on('task_start',function(e){
e.passthrough=passthrough,
++a;
}),
orchestrator.on('task_stop',function(e){
e.passthrough.should.equal(passthrough),
++a;
}),
orchestrator._runTask(task),


a.should.equal(2),
done();
});

});
});